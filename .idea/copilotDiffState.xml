<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="# Audio Transcription App&#10;&#10;This project is a simple web application for transcribing audio files to text using the OpenAI Whisper model. The app is built with Python, Gradio, and Hugging Face Transformers.&#10;&#10;## Features&#10;- Upload audio files and get transcriptions instantly&#10;- Uses OpenAI Whisper (tiny.en) for speech recognition&#10;- User-friendly web interface powered by Gradio&#10;&#10;## Requirements&#10;- Python 3.8+&#10;- pip (Python package manager)&#10;- ffmpeg (audio processing tool, must be installed on your system)&#10;- The following Python packages:&#10;  - torch&#10;  - transformers&#10;  - gradio&#10;&#10;## Installation&#10;1. Clone this repository or download the source code.&#10;2. (Optional) Create and activate a virtual environment:&#10;   ```bash&#10;   python3 -m venv my_env&#10;   source my_env/bin/activate&#10;   ```&#10;3. Install ffmpeg:&#10;   - On Ubuntu/Debian:&#10;     ```bash&#10;     sudo apt-get install ffmpeg&#10;     ```&#10;   - On macOS (using Homebrew):&#10;     ```bash&#10;     brew install ffmpeg&#10;     ```&#10;   - On Windows: Download from https://ffmpeg.org/download.html and add to PATH&#10;4. Install dependencies:&#10;   ```bash&#10;   pip install torch transformers gradio&#10;   ```&#10;&#10;## Usage&#10;Run the main app:&#10;```bash&#10;python speech2text_app.py&#10;```&#10;The Gradio web interface will launch at http://localhost:7860 (or your specified port).&#10;&#10;## File Structure&#10;- `speech2text_app.py`: Main application file&#10;- `download.py`, `simple_speech2text.py`: Additional scripts (not required for main app)&#10;- `downloaded_audio.mp3`: Example audio file&#10;- `my_env/`: (Optional) Python virtual environment&#10;&#10;## How It Works&#10;- Upload an audio file via the web interface&#10;- The app uses Hugging Face's pipeline with OpenAI Whisper to transcribe speech to text&#10;- The transcription is displayed in the browser&#10;&#10;## Notes&#10;- For best results, use clear audio files in English&#10;- The Whisper tiny model is lightweight but may be less accurate than larger models&#10;&#10;## License&#10;This project is for educational purposes." />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>